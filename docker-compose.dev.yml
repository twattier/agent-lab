version: '3.8'

# Development environment configuration for AgentLab
# Includes hot reload, debug ports, and development optimizations

networks:
  agentlab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  node_modules_cache:
    driver: local

services:
  postgres:
    image: postgres:15.4
    container_name: agentlab-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-agentlab_dev}
      POSTGRES_USER: ${POSTGRES_USER:-agentlab_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8'
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./infrastructure/postgres/init:/docker-entrypoint-initdb.d
      - ./infrastructure/postgres/dev-data:/docker-entrypoint-initdb.d/dev-data
    networks:
      agentlab-network:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    command: >
      postgres
      -c shared_preload_libraries=vector
      -c max_connections=100
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c maintenance_work_mem=32MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=8MB
      -c default_statistics_target=100
      -c log_statement=all
      -c log_duration=on
      -c log_min_duration_statement=0

  redis:
    image: redis:7.0-alpine
    container_name: agentlab-redis-dev
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dev_redis_password}
    ports:
      - '${REDIS_PORT:-6379}:6379'
      - '6380:6379' # Alternative port for debugging
    volumes:
      - redis_data_dev:/data
      - ./infrastructure/redis/redis-dev.conf:/usr/local/etc/redis/redis.conf
    networks:
      agentlab-network:
        ipv4_address: 172.20.0.11
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass $${REDIS_PASSWORD}

  api:
    build:
      context: .
      dockerfile: ./infrastructure/docker/api/Dockerfile
      target: development
    container_name: agentlab-api-dev
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-agentlab_user}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-agentlab_dev}
      REDIS_URL: redis://:${REDIS_PASSWORD:-dev_redis_password}@redis:6379
      ENV: development
      DEBUG: 'true'
      LOG_LEVEL: debug
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-}
      PYTHONPATH: /app
      RELOAD: 'true'
    ports:
      - '${API_PORT:-8000}:8000'
      - '5678:5678' # debugpy port
    volumes:
      - ./apps/api:/app/api
      - ./packages:/app/packages
      - ./infrastructure/logs:/app/logs
      - /app/api/__pycache__ # Exclude cache from volume mount
    networks:
      agentlab-network:
        ipv4_address: 172.20.0.13
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: >
      sh -c "
      pip install debugpy &&
      python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
      "

  web:
    build:
      context: .
      dockerfile: ./infrastructure/docker/web/Dockerfile
      target: development
    container_name: agentlab-web-dev
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-dev_nextauth_secret}
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
    ports:
      - '${WEB_PORT:-3000}:3000'
      - '9229:9229' # Node.js debug port
    volumes:
      - ./apps/web:/app/web
      - ./packages:/app/packages
      - node_modules_cache:/app/web/node_modules
      - node_modules_cache:/app/packages/types/node_modules
      - node_modules_cache:/app/packages/ui/node_modules
      - node_modules_cache:/app/packages/utils/node_modules
      - /app/web/.next # Exclude .next from volume mount for performance
    networks:
      agentlab-network:
        ipv4_address: 172.20.0.14
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: npm run dev --workspace=apps/web

  # Development tools
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agentlab-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@agentlab.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-dev_admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    volumes:
      - ./infrastructure/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - agentlab-network
    depends_on:
      - postgres

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: agentlab-redis-commander-dev
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-dev_redis_password}
      HTTP_USER: ${REDIS_COMMANDER_USER:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-dev_admin_password}
    ports:
      - '8081:8081'
    networks:
      - agentlab-network
    depends_on:
      - redis

  # Development nginx (optional, for testing proxy configuration)
  nginx:
    image: nginx:1.25-alpine
    container_name: agentlab-nginx-dev
    restart: unless-stopped
    ports:
      - '${HTTP_PORT:-80}:80'
    volumes:
      - ./infrastructure/nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/conf.d/agentlab-dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./apps/web/public:/var/www/public:ro
      - ./infrastructure/logs:/var/log/nginx
    networks:
      agentlab-network:
        ipv4_address: 172.20.0.12
    depends_on:
      - api
      - web
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
