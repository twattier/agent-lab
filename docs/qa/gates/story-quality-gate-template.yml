# Story Quality Gate Template
# Generated by Quinn (Test Architect) - AgentLab QA Framework

storyId: "{epic}.{story-number}"
storyTitle: "{Story Title}"
epicName: "{Epic Name}"
assessmentDate: "{YYYY-MM-DD}"
reviewer: "Quinn (Test Architect)"
riskLevel: "{CRITICAL|HIGH|MEDIUM|LOW}"

# PRE-DEVELOPMENT GATE
preDevelopmentGate:
  status: "{PASS|CONCERNS|FAIL}"

  requirementsAnalysis:
    acceptanceCriteria: "{COMPLETE|INCOMPLETE|MISSING}"
    testableRequirements: "{YES|NO|PARTIAL}"
    businessValueClear: "{YES|NO|UNCLEAR}"
    comments: "{Free text assessment}"

  riskAssessment:
    probabilityRating: "{1-5 scale}"
    impactRating: "{1-5 scale}"
    riskScore: "{probability Ã— impact}"
    mitigationStrategy: "{Risk mitigation approach}"
    criticalDependencies:
      - "{Dependency 1}"
      - "{Dependency 2}"

  testStrategy:
    givenWhenThenScenarios: "{COMPLETE|INCOMPLETE}"
    unitTestPlan: "{DEFINED|UNDEFINED}"
    integrationTestPlan: "{DEFINED|UNDEFINED}"
    e2eTestPlan: "{DEFINED|UNDEFINED}"
    performanceCriteria: "{DEFINED|UNDEFINED}"

  dependencies:
    technicalDependencies:
      - dependency: "{Service/Component Name}"
        status: "{AVAILABLE|UNAVAILABLE|AT_RISK}"
        impact: "{HIGH|MEDIUM|LOW}"
    businessDependencies:
      - dependency: "{Stakeholder/Decision}"
        status: "{RESOLVED|PENDING|BLOCKED}"
        impact: "{HIGH|MEDIUM|LOW}"

  gateDecision: "{PASS|CONCERNS|FAIL}"
  gateRationale: "{Explanation of gate decision}"

# DURING DEVELOPMENT GATE (Continuous)
developmentQualityGate:

  testDrivenDevelopment:
    unitTestsFirst: "{YES|NO|PARTIAL}"
    testCoverageTarget: "{Percentage}%"
    currentCoverage: "{Percentage}%"
    coverageGapJustification: "{If below target}"

  codeQuality:
    lintingPassing: "{YES|NO}"
    typeCheckingPassing: "{YES|NO}"
    codingStandardsCompliant: "{YES|NO}"
    codeReviewCompleted: "{YES|NO|IN_PROGRESS}"

  securityValidation:
    inputValidation: "{COMPLETE|INCOMPLETE|NOT_APPLICABLE}"
    authenticationBoundaries: "{VERIFIED|NOT_VERIFIED|NOT_APPLICABLE}"
    authorizationChecks: "{VERIFIED|NOT_VERIFIED|NOT_APPLICABLE}"
    dataProtection: "{COMPLIANT|NON_COMPLIANT|NOT_APPLICABLE}"

  integrationTesting:
    apiContractsValidated: "{YES|NO|NOT_APPLICABLE}"
    databaseOperationsTested: "{YES|NO|NOT_APPLICABLE}"
    externalServiceMocking: "{COMPLETE|INCOMPLETE|NOT_APPLICABLE}"
    errorHandlingTested: "{YES|NO|PARTIAL}"

# STORY COMPLETION GATE
storyCompletionGate:
  status: "{PASS|CONCERNS|FAIL|WAIVED}"

  testExecution:
    unitTestsPassing: "{YES|NO}"
    unitTestCoverage: "{Percentage}%"
    integrationTestsPassing: "{YES|NO}"
    e2eTestsPassing: "{YES|NO|NOT_APPLICABLE}"
    performanceTestsPassing: "{YES|NO|NOT_APPLICABLE}"

  qualityMetrics:
    performanceBenchmarks:
      responseTime: "{Actual vs Target}"
      throughput: "{Actual vs Target}"
      memoryUsage: "{Within limits: YES/NO}"

    securityRequirements:
      vulnerabilityScanning: "{PASS|FAIL|NOT_APPLICABLE}"
      securityBoundaries: "{VERIFIED|NOT_VERIFIED}"
      dataProtectionCompliance: "{COMPLIANT|NON_COMPLIANT}"

    accessibilityStandards:
      wcagCompliance: "{AA_COMPLIANT|NON_COMPLIANT|NOT_APPLICABLE}"
      keyboardNavigation: "{WORKING|NOT_WORKING|NOT_APPLICABLE}"
      screenReaderCompatible: "{YES|NO|NOT_APPLICABLE}"

  documentation:
    technicalDocumentation: "{COMPLETE|INCOMPLETE|NOT_REQUIRED}"
    userDocumentation: "{COMPLETE|INCOMPLETE|NOT_REQUIRED}"
    apiDocumentation: "{COMPLETE|INCOMPLETE|NOT_APPLICABLE}"

  reviewApproval:
    codeReviewApproved: "{YES|NO}"
    architecturalReview: "{APPROVED|REJECTED|NOT_REQUIRED}"
    businessStakeholderApproval: "{APPROVED|REJECTED|PENDING}"

# DEFECTS AND ISSUES
defectsAndIssues:
  criticalDefects:
    count: "{Number}"
    description:
      - issue: "{Issue description}"
        severity: "CRITICAL"
        status: "{OPEN|IN_PROGRESS|RESOLVED}"

  highSeverityDefects:
    count: "{Number}"
    description:
      - issue: "{Issue description}"
        severity: "HIGH"
        status: "{OPEN|IN_PROGRESS|RESOLVED}"

  technicalDebt:
    identified: "{YES|NO}"
    impact: "{HIGH|MEDIUM|LOW}"
    remediation_plan: "{Description of plan}"

  knownLimitations:
    - limitation: "{Description}"
      impact: "{Impact on functionality}"
      workaround: "{Available workaround}"

# PERFORMANCE VALIDATION
performanceAssessment:
  loadTesting:
    performed: "{YES|NO|NOT_REQUIRED}"
    results: "{PASS|FAIL|CONCERNS}"
    details: "{Performance test results}"

  responsiveness:
    frontendPerformance:
      pageLoadTime: "{Time in seconds}"
      interactionResponsiveness: "{ACCEPTABLE|UNACCEPTABLE}"

    backendPerformance:
      apiResponseTime: "{Average response time}"
      databaseQueryPerformance: "{OPTIMIZED|NEEDS_IMPROVEMENT}"

  resourceUtilization:
    memoryUsage: "{Within limits: YES/NO}"
    cpuUtilization: "{Percentage}%"
    databaseConnections: "{Count and efficiency}"

# SECURITY ASSESSMENT
securityAssessment:
  threatModeling:
    performed: "{YES|NO|NOT_REQUIRED}"
    threatsIdentified: "{Number of threats}"
    mitigationsImplemented: "{Number of mitigations}"

  vulnerabilityTesting:
    staticAnalysis: "{PASS|FAIL|NOT_PERFORMED}"
    dynamicTesting: "{PASS|FAIL|NOT_PERFORMED}"
    dependencyScanning: "{PASS|FAIL|NOT_PERFORMED}"

  securityControls:
    inputValidation: "{IMPLEMENTED|NOT_IMPLEMENTED|NOT_REQUIRED}"
    outputEncoding: "{IMPLEMENTED|NOT_IMPLEMENTED|NOT_REQUIRED}"
    authenticationMechanisms: "{SECURE|INSECURE|NOT_APPLICABLE}"
    authorizationEnforcement: "{PROPER|IMPROPER|NOT_APPLICABLE}"

# GATE DECISION
finalGateDecision:
  decision: "{PASS|CONCERNS|FAIL|WAIVED}"

  passConditions:
    - condition: "{All tests passing}"
      status: "{MET|NOT_MET}"
    - condition: "{Performance requirements met}"
      status: "{MET|NOT_MET}"
    - condition: "{Security requirements satisfied}"
      status: "{MET|NOT_MET}"
    - condition: "{Code review approved}"
      status: "{MET|NOT_MET}"

  concernsIdentified:
    - concern: "{Description of concern}"
      severity: "{HIGH|MEDIUM|LOW}"
      mitigation: "{Mitigation strategy}"

  waiveredRequirements:
    - requirement: "{Requirement being waived}"
      justification: "{Business justification}"
      riskAcceptance: "{Who accepted the risk}"

  actionItems:
    - action: "{Action required}"
      assignee: "{Person responsible}"
      dueDate: "{YYYY-MM-DD}"
      priority: "{HIGH|MEDIUM|LOW}"

# RECOMMENDATIONS
recommendations:
  immediateActions:
    - action: "{Action to take immediately}"
      rationale: "{Why this action is needed}"

  futureImprovements:
    - improvement: "{Process or technical improvement}"
      benefit: "{Expected benefit}"
      effort: "{Implementation effort estimate}"

  processImprovements:
    - process: "{Process that could be improved}"
      suggestion: "{Improvement suggestion}"

# METRICS AND TRACKING
metrics:
  testExecutionMetrics:
    totalTests: "{Number}"
    passingTests: "{Number}"
    failingTests: "{Number}"
    skippedTests: "{Number}"
    testExecutionTime: "{Duration}"

  qualityMetrics:
    codeComplexity: "{Cyclomatic complexity score}"
    maintainabilityIndex: "{Score}"
    technicalDebtRatio: "{Percentage}"

  effortMetrics:
    developmentTime: "{Hours}"
    testingTime: "{Hours}"
    reviewTime: "{Hours}"
    reworkTime: "{Hours}"

# STAKEHOLDER SIGN-OFF
signOff:
  testArchitect:
    name: "Quinn"
    decision: "{APPROVED|REJECTED|CONDITIONAL}"
    date: "{YYYY-MM-DD}"
    signature: "Digital signature or approval record"

  developmentLead:
    name: "{Developer Name}"
    decision: "{APPROVED|REJECTED|CONDITIONAL}"
    date: "{YYYY-MM-DD}"
    comments: "{Any additional comments}"

  productOwner:
    name: "{Product Owner Name}"
    decision: "{APPROVED|REJECTED|CONDITIONAL}"
    date: "{YYYY-MM-DD}"
    businessApproval: "{YES|NO|CONDITIONAL}"

# AUDIT TRAIL
auditTrail:
  createdDate: "{YYYY-MM-DD HH:MM:SS}"
  lastModifiedDate: "{YYYY-MM-DD HH:MM:SS}"
  modificationHistory:
    - date: "{YYYY-MM-DD HH:MM:SS}"
      user: "{User name}"
      changes: "{Description of changes made}"

  relatedDocuments:
    - document: "{Document name}"
      type: "{Requirements|Design|Test Plan|etc}"
      location: "{File path or URL}"

  complianceTracking:
    regulatoryRequirements: "{Applicable regulations}"
    complianceStatus: "{COMPLIANT|NON_COMPLIANT|PARTIAL}"
    auditFindings: "{Any compliance issues identified}"

---

# USAGE INSTRUCTIONS

## How to Use This Template:

1. **Copy this template** for each story requiring quality gate assessment
2. **Replace all placeholders** (text in curly braces) with actual values
3. **Complete all applicable sections** - mark non-applicable items as "NOT_APPLICABLE"
4. **Document gate decisions** with clear rationale and supporting evidence
5. **Track action items** through to completion
6. **Archive completed gates** in the project's quality assurance record

## Gate Decision Guidelines:

- **PASS**: All requirements met, no blocking issues, ready to proceed
- **CONCERNS**: Minor issues identified but not blocking, with mitigation plans
- **FAIL**: Significant issues that must be resolved before proceeding
- **WAIVED**: Requirements intentionally not met with business justification

## Template Maintenance:

- **Review quarterly** to ensure template remains relevant and effective
- **Update based on lessons learned** from previous gate assessments
- **Align with project-specific** quality standards and business requirements
- **Incorporate feedback** from development team and stakeholders

---

*This template is part of the AgentLab QA Assessment Framework and should be used in conjunction with the comprehensive QA documentation.*