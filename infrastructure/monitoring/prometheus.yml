# AgentLab Prometheus Configuration
# Monitoring configuration for all application services

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'agentlab'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Rules configuration
rule_files:
  - 'alert_rules.yml'

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # AgentLab API service
  - job_name: 'agentlab-api'
    static_configs:
      - targets: ['api:8000']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # AgentLab Web service
  - job_name: 'agentlab-web'
    static_configs:
      - targets: ['web:3000']
    metrics_path: '/api/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Node exporter for system metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Docker daemon metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['host.docker.internal:9323']
    scrape_interval: 30s
    metrics_path: '/metrics'

# Recording rules for performance optimization
recording_rules:
  - name: agentlab.rules
    rules:
      # API request rate
      - record: agentlab:api_request_rate
        expr: rate(http_requests_total{job="agentlab-api"}[5m])

      # API error rate
      - record: agentlab:api_error_rate
        expr: rate(http_requests_total{job="agentlab-api",status=~"5.."}[5m])

      # API response time quantiles
      - record: agentlab:api_response_time_p95
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="agentlab-api"}[5m]))

      - record: agentlab:api_response_time_p99
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket{job="agentlab-api"}[5m]))

      # Database connection pool usage
      - record: agentlab:db_connections_active
        expr: pg_stat_activity_count{job="postgres"}

      # Redis memory usage
      - record: agentlab:redis_memory_usage_percent
        expr: (redis_memory_used_bytes{job="redis"} / redis_memory_max_bytes{job="redis"}) * 100

      # System resource utilization
      - record: agentlab:cpu_usage_percent
        expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle",job="node"}[5m])) * 100)

      - record: agentlab:memory_usage_percent
        expr: (1 - (node_memory_MemAvailable_bytes{job="node"} / node_memory_MemTotal_bytes{job="node"})) * 100

      - record: agentlab:disk_usage_percent
        expr: (1 - (node_filesystem_avail_bytes{job="node",fstype!="tmpfs"} / node_filesystem_size_bytes{job="node",fstype!="tmpfs"})) * 100

# Remote storage configuration (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 90d
    retention.size: 10GB
